#!/bin/sh
#
#       /etc/rc.d/init.d/avicontroller
#
#       Daemon for avicontroller
#
# chkconfig:   2345 99 99
# description: Avi Controller service

### BEGIN INIT INFO
# Provides:       avicontroller
# Required-Start: docker
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start: 2 3 4 5
# Default-Stop:  0 1 6
# Short-Description: start and stop avicontroller
# Description: Avi Controller service
### END INIT INFO

write_log() {
  echo $1 2>&1 | tee -a /var/log/avicontroller.log
}

remove_container() {
  write_log "[`date`] Removing existing avicontroller container"
  /usr/bin/docker rm -f avicontroller
  if [ $? -eq 0 ]; then
    write_log "[`date`] Removed existing avicontroller container"
  else
    write_log "[`date`] Failed to remove existing avicontroller container"
  fi
}

prestart() {
  # Clean up any running or existing avicontroller containers
  write_log "[`date`] Performing avicontroller pre-start steps"
  if $(docker ps -a -f name=avicontroller | grep -q avicontroller); then
    write_log "[`date`] Already running avicontroller container performing cleanup"
    remove_container
  fi
}

start() {
  prestart
  write_log "[`date`] Starting the avicontroller container"
  /usr/bin/docker run {{ con_docker_run_params }}
  if [ $? -eq 0 ]; then
    write_log "[`date`] Service avicontroller running..."
    /usr/bin/docker wait avicontroller
  else
    write_log "[`date`] Failed to start the avicontroller container"
    exit 1
  fi
}

stop() {
  # Stopping the docker process if running
  if $(docker ps -f name=avicontroller | grep -q avicontroller); then
    write_log "[`date`] Service avicontroller stopping..."
    /usr/bin/docker stop -t 60 avicontroller
    if [ $? -eq 0 ]; then
      write_log "[`date`] Stopped the avicontroller container"
    else
      exit 1
    fi
  else
    write_log "[`date`] Service avicontroller already stopped"
  fi
  poststop
}

poststop() {
  if $(ip addr | grep -q {{ con_dev_name }}:avivip); then
    /bin/bash -c "ip addr del $(ip addr | grep {{ con_dev_name }}:avivip | awk '{print $2}') dev {{ con_dev_name }}"
    if [ $? -eq 0 ]; then
      write_log "[`date`] Successfuly removed the cluster vip interface."
    fi
  elif $(ip addr | grep -q {{ con_dev_name }}:1); then
    /bin/bash -c "ip addr del $(ip addr | grep {{ con_dev_name }}:1 | awk '{print $2}') dev {{ con_dev_name }}"
    if [ $? -eq 0 ]; then
      write_log "[`date`] Successfuly removed the cluster vip interface."
    fi
  fi
  if $(docker ps -a -f name=avicontroller | grep -q avicontroller); then
    remove_container
  fi
}

restart() {
  stop
  start
}

reload() {
  restart
}

status() {
  if $(docker ps -f name=avicontroller | grep -q avicontroller); then
    echo "avicontroller running..."
  else
    echo "avicontroller stopped"
  fi
}

case "$1" in
  start|stop|status|restart|reload)
    $1
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|reload}"
    exit 2
esac

exit $?
